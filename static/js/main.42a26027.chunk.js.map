{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","hasTitle","setHasTitle","setDescription","hasDescription","setHasDescription","setImgUrl","hasImgUrl","setHasImgUrl","setImdbUrl","hasImdbUrl","setHasImdbUrl","setImdbId","hasImdbId","setHasImdbId","onSubmit","event","preventDefault","type","name","placeholder","value","onChange","e","target","App","moviesFromServer","setMovies","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42a26027.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","// import { Component } from 'react';\nimport React, { useState } from 'react';\nimport { Movie } from '../../react-app-env';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState<string>('');\n  const [hasTitle, setHasTitle] = useState<boolean>(false);\n\n  const [description, setDescription] = useState<string>('');\n  const [hasDescription, setHasDescription] = useState<boolean>(false);\n\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [hasImgUrl, setHasImgUrl] = useState<boolean>(false);\n\n  const [imdbUrl, setImdbUrl] = useState<string>('');\n  const [hasImdbUrl, setHasImdbUrl] = useState<boolean>(false);\n\n  const [imdbId, setImdbId] = useState<string>('');\n  const [hasImdbId, setHasImdbId] = useState<boolean>(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitle(!title);\n    setHasDescription(!description);\n    setHasImdbId(!imdbId);\n    setHasImdbUrl(!imdbUrl);\n    setHasImgUrl(!imgUrl);\n\n    if (title && description && imgUrl && imdbUrl && imdbId) {\n      addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      setTitle('');\n      setDescription('');\n      setImdbUrl('');\n      setImdbId('');\n      setImgUrl('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"inputWrapper\">\n        <span>Title:</span>\n\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => {\n            setHasTitle(false);\n            setTitle(e.target.value);\n          }}\n        />\n\n        {hasTitle && (\n          <span>Title is empty</span>\n        )}\n      </div>\n\n      <div className=\"inputWrapper\">\n        <span>Description:</span>\n\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => {\n            setHasDescription(false);\n            setDescription(e.target.value);\n          }}\n        />\n\n        {hasDescription && (\n          <span>Description is empty</span>\n        )}\n      </div>\n\n      <div className=\"inputWrapper\">\n        <span>ImgUrl:</span>\n\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          onChange={(e) => {\n            setHasImgUrl(false);\n            setImgUrl(e.target.value);\n          }}\n        />\n\n        {hasImgUrl && (\n          <span>ImgUrl is empty</span>\n        )}\n      </div>\n\n      <div className=\"inputWrapper\">\n        <span>ImgUrl:</span>\n\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={(e) => {\n            setHasImdbUrl(false);\n            setImdbUrl(e.target.value);\n          }}\n        />\n\n        {hasImdbUrl && (\n          <span>ImdbUrl is empty</span>\n        )}\n      </div>\n\n      <div className=\"inputWrapper\">\n        <span>ImdbId:</span>\n\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          value={imdbId}\n          onChange={(e) => {\n            setHasImdbId(false);\n            setImdbId(e.target.value);\n          }}\n        />\n\n        {hasImdbId && (\n          <span>ImdbId is empty</span>\n        )}\n      </div>\n\n      <button type=\"submit\">Add Card</button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './react-app-env';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((currentMovie) => [...currentMovie, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}